{
  "stats": {
    "suites": 1,
    "tests": 1,
    "passes": 1,
    "pending": 0,
    "failures": 0,
    "start": "2020-01-22T12:48:17.782Z",
    "end": "2020-01-22T12:48:26.835Z",
    "duration": 9053,
    "testsRegistered": 1,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "08435fbc-0d1c-4c30-99f0-a18403df9a20",
      "title": "",
      "fullFile": "",
      "file": "",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "5d01ad1a-342c-402f-b993-9628810bfd46",
          "title": "My first testsuite",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "My first testcase",
              "fullTitle": "My first testsuite My first testcase",
              "timedOut": null,
              "duration": 6083,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.visit(Cypress.env('url') + \"/seleniumPractise/#/\");\ncy.get('.search-keyword').type('Ca');\ncy.get('.search-button').click();\ncy.wait(2000);\ncy.get('.product:visible').should('have.length', 4); //parent child relation\n//met .products.find gaat die alleen in de parent products kijken\n//Alias meegeven aan een webelement, deze kun je herbruiken in andere testcases\ncy.get('.products').as('ProductLocator');\ncy.get('@ProductLocator').find('.product').should('have.length', 4); // use this method is there are elements with the same name\n//first enter the parent, then the child and then choose the item.\ncy.get('@ProductLocator').find('.product').eq(1).contains('ADD TO CART').click().then(function () {\n  console.log('Add to cart function is clicked');\n}); //Dit is een loop, de loop loopt over vier elementen en zal dan controleren op de tekst. Aan de hand van de tekst klikt op hij element\ncy.get('@ProductLocator').find('.product').each(function ($el, index, $list) {\n  var TextFirstElement = $el.find('h4.product-name').text();\n  if (TextFirstElement.includes('Cashews')) {\n    $el.find('button').click();\n  } //let handig om te gebruiken in een loop\n  //let test = \"\"\n  //test = TextFirstElement\n}); //assert if logo is correctly displayed\ncy.get('.brand').should('have.text', 'GREENKART'); //this is to print in logs\nvar logo = cy.get('.brand').then(function (LogoElement) {\n  cy.log(LogoElement.text());\n}); //cy.log(logo.text())",
              "err": {},
              "uuid": "912947a4-c28a-4183-a5b3-95b13eaddca7",
              "parentUUID": "5d01ad1a-342c-402f-b993-9628810bfd46",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "912947a4-c28a-4183-a5b3-95b13eaddca7"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 6083,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "5.2.0"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": true,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false
      },
      "version": "4.1.0"
    },
    "marge": {
      "options": {},
      "version": "4.1.0"
    }
  }
}